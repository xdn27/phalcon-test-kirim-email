<?php

namespace Application\Controllers;

use Application\Core\User;
use Phalcon\Mvc\View;
use Phalcon\Http\Request;

use Application\Models\Notes;

class IndexController extends ControllerBase {
	public function beforeExecuteRoute($dispatcher)
    {
        parent::beforeExecuteRoute($dispatcher); // TODO: Change the autogenerated stub
    }
    
    public function mainAction() {

        $request = new Request();
        if($request->isPost()){
            $type = $request->getPost('type');
            switch($type) {
                case 'new': 
                    $this->saveNote($request);
                    break;
                case 'edit':
                    $this->updateNote($request);
                    break;
                case 'delete':
                    $this->deleteNote($request);
                    break;
            }
        }

        $this->view->notes = Notes::find();
    }
    
    private function saveNote($request){

        $notes = new Notes();
 
        $notes->assign(array('message' => $request->getPost('message')));
        $notes->save();

        $this->view->disable();
        $this->flash->success('Note added!');
        $this->response->redirect('');
    }

    private function updateNote($request){

        $notes = Notes::findFirstById($request->getPost('id'));
        
        $notes->id = $request->getPost('id');
        $notes->message = $request->getPost('message');
        
        $isDone = $request->getPost('done');
        $notes->is_done = 0;
        if($isDone) {
            $notes->is_done = 1;
        }

        $notes->save();

        $this->view->disable();
        $this->flash->success('Note updated!');
        $this->response->redirect('');
    }
    
    private function deleteNote($request) {

        $notes = Notes::find($request->getPost('id'));
        $notes->delete();

        $this->view->disable();
        $this->flash->success('Note removed!');
        $this->response->redirect('');
    }
}

